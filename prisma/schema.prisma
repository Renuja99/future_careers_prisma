// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {

  id            Int            @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String         @unique
  role          Role
  password      String
  notifications Notification[]
  isVerified    Boolean        @default(false)
  Company       Company?
  JobSeeker     Job_seeker?


}

model Company {
  id           Int          @id @default(autoincrement())
  user         User         @relation(fields: [userId], references: [id])
  userId       Int          @unique
  job_adverts  Job_advert[]
  company_role String       @db.VarChar(100)
  firstName    String       @db.VarChar(20)
  lastName     String       @db.VarChar(20)
  address      String       @db.VarChar(500)

}

model Job_seeker {
  id                Int                   @id @default(autoincrement())
  user              User                  @relation(fields: [userId], references: [id])
  userId            Int                   @unique
  firstName         String                @db.VarChar(20)
  lastName          String                @db.VarChar(20)
  cv_user           Curriculum_Vitae?
  jobAdvertsApplied JobAdvertsOnSeekers[]

}

model Curriculum_Vitae {
  id          Int        @id @default(autoincrement())
  job_seeker  Job_seeker @relation(fields: [jobSeekerId], references: [id])
  jobSeekerId Int        @unique
  isPublished Boolean    @default(false)

}

model Job_advert {

  id               Int                   @id @default(autoincrement())
  job_title        String                @db.VarChar(255)
  company          Company               @relation(fields: [company_id], references: [id])
  company_id       Int
  click_count      Int
  job_type_id      Job_type
  closing_date     DateTime              @default(now())
  job_time_id      Work_hours
  exp_level_id     Exp_level
  min_wage         Int
  max_wage         Int
  industry_type    Industry_type         @relation(fields: [industry_type_id], references: [id])
  industry_type_id Int
  job_description  String                @db.VarChar(255)
  jobSeekers       JobAdvertsOnSeekers[]

}

model JobAdvertsOnSeekers {

  jobSeeker   Job_seeker @relation(fields: [jobSeekerId], references: [id])
  jobSeekerId Int
  jobAdvert   Job_advert @relation(fields: [jobAdvertId], references: [id])
  jobAdvertId Int


  @@id([jobSeekerId, jobAdvertId])
}

model Notification {

  id          Int    @id @default(autoincrement())
  user        User   @relation(fields: [userId], references: [id])
  userId      Int
  description String

}

model Industry_type {

  id          Int          @id @default(autoincrement())
  job_adverts Job_advert[]

}

enum Role {
  ADMIN
  JOB_SEEKER
  EMPLOYER
}

enum Work_hours {
  part_time
  full_time
}

enum Exp_level {

  junior
  senior
  intern
}

enum Job_type {
  remote
  onSite
}
